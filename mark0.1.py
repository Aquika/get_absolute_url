import os


a = 'hello'
b = 'world'
c = 'haleluja'
os.system('cls')
print(a, b, c)
print('version 0.2')

# #Команды Git

#     git add . ---- КОманда которая просит гит сохранять дальнейшие изменения файла
#     git ------ проверка что гит установлен правильно
#     git --version ---------- проверка версии
#     git init ------- запуск гит
#     git status ------ проверка статуса файлов
#     git commit -m "Your comment for commit" - создание версий;


#     Последовательность действий при начале нового проекта
# 1. Создание проекта с нуля
# Самый начальный вариант - когда мы только приступаем к работе над проектом и у нас еще нет ни локального репозитория ни удаленного. Создаем папку проекта на компьютере, открываем ее в VS Code, создаем первый файл и выполняем следующие команды:

# 1. Инициализация локального репозитория (репо):

# git init
# 2. Добавление файлов в локальный репо:

# git add .
# 3. Коммит изменений:

# git commit -m "Initial"
# 4. Заходим в GitHub и создаем репозиторий;

# 5. Связываем репо на GitHub с локальным репо:

# git remote add origin git@github.com:PumpSkill/project1.git
# вместо PumpSkill/chbr.git - имя твоего репозитория.

# 6. Пушим изменения в удаленный репозиторий на GitHub:

# git push origin main
# 2. Есть проект на компьютере - нет на GitHub
# Допустим у тебя уже есть проект на компьютере и вы хотите выложить его на GitHub. Здесь последовательность действий будет точно такая же как в п.1.

# 3. Есть на GitHub - нет на компьютере
# Если у тебя нет проекта на компьютере, но есть удаленный репозиторий на GitHub, к которому ты хочешь подключиться, то последовательность действий такая:

# 1. Создаем папку в которой будет наш проект и открываем ее в VS Code;

# 2. Клонируем удаленный репозиторий:

# git clone git@github.com:PumpSkill/project1.git
# вместо PumpSkill/chbr.git - имя твоего репозитория. Готово. После этого переходим в папку, в которую склонировался репо и работаем в ней как обычно.